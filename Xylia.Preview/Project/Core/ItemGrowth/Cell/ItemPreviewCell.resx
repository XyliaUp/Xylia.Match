<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="feedItemIconCell1.FrameImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NYC9djHeAAAAAElFTkSuQmCC
</value>
  </data>
</root>